#lang racket
(define (cons a b) (* (expt 2 a) 
                      (expt 3 b)))

(define (log-x n x)
  (if (= 0 (remainder n x))
      (+ 1 (log-x (/ n x) x))
      0))

(define (car x)
      (log-x x 2))

(define (cdr x)
      (log-x x 3))